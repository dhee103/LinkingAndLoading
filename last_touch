#!/usr/bin/ruby
# simple.rb

#read in input
targetPath = ARGV[0]

# check if argument given; if not then set the target path as current directory
if ARGV.empty?
  targetPath = `pwd`
end

# check if the right number of arguments are specified
if ARGV.length > 1
  puts "Too many arguments specified"
  exit 1
end

# check if the specified argument is a directory
if !File.directory?(targetPath.strip)
  puts "Argument isn't a directory"
  exit 1
end

Dir.chdir(targetPath.strip)

=begin
check files at & below the targetDirectory to split into two arrays using
git ls-files. The split is based on whether they are (inGit) or aren't
(notInGit) under vc Using split (on new lines).
I then remove trailing newlines and convert the strings into arrays of strings
=end
inGit = `git ls-files`.split(/\n+/)
notInGit = `git ls-files --other`.split(/\n+/)

# obtain relevant data for files under vc & store in respective arrays
dates = inGit.map{ |x| `git log --no-merges -n 1 --date=iso-strict --format=%ad -- #{x}`.strip}
revIDs = inGit.map{ |x| `git log --no-merges -n 1 --format=%h -- #{x} | cut -c1-5`.strip}
authors = inGit.map{ |x| `git log --no-merges -n 1 --format=%an -- #{x}`.strip}

=begin
check if there are files under version control i.e. if inGit is empty
if not we can ignore them and hence the following code
=end
if !inGit.empty?
    # find the longest filepath and then pad the target files appropriately
  longest = inGit.max_by(&:length).length
  inGit.map!{|x| x.ljust(longest)}

  # initialise a 2d array containing arrays of information about target files
  underVC = Array.new(inGit.length - 1){Array.new(4)}
  for i in 0..inGit.length - 1
    underVC[i] = [dates[i], revIDs[i], inGit[i], authors[i]]
  end

  #sort files under vc by datetime
  underVC.sort!{|a,b| b[0] <=> a[0]}

  # output files under vc
  for i in 0..inGit.length - 1
    puts "#{underVC[i][0]} [#{underVC[i][1]}]: #{underVC[i][2]} (#{underVC[i][3]})"
  end
end

# checks if there any files not under vc; if not we can ignore this code
if !notInGit.empty?
  # output the files not under version control
  for i in 0..notInGit.length - 1
    puts "[***not under version control***]: #{notInGit[i]}"
  end
end
